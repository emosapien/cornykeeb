/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "homerowmods";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "NEW_MACRO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp N &kp O &kp A &kp H &kp DOT &kp R &kp O &kp U &kp S &kp E &kp AT &kp P &kp A &kp T &kp A &kp G &kp O &kp N &kp I &kp A &kp DOT &kp C &kp O &kp M>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none         &kp Q        &kp W        &kp E          &kp R        &kp T          &kp Y         &kp U        &kp I        &kp O                  &kp P  &none
&none  &hrm LCTRL A  &hrm LALT S  &hrm LGUI D  &hrm LSHIFT F      &lt 3 G          &kp H  &hrm LSHFT J  &hrm LGUI K  &hrm LALT L  &hrm LCTRL APOSTROPHE  &none
&none         &kp Z        &kp X        &kp C          &kp V      &lt 4 B          &kp N         &kp M    &kp COMMA      &kp DOT               &kp FSLH  &none
                                       &trans      &lt 2 RET  &lt 1 SPACE    &lt 1 SPACE    &lt 2 BSPC       &trans
            >;
        };

        SPCNAV {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "SPCNAV";
            bindings = <
&none    &kp ESC  &kp SEMI  &kp LEFT_BRACKET     &kp RIGHT_BRACKET                &kp TAB    &kp LC(C)         &kp UP    &kp LC(V)  &kp LG(TAB)    &kp BACKSPACE  &none
&none  &kp LCTRL  &kp LALT          &kp LGUI            &kp LSHIFT                  &none     &kp LEFT       &kp DOWN    &kp RIGHT  &kp LC(TAB)       &kp DELETE  &none
&none      &none     &none             &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP      &kp END  &kp PRINTSCREEN  &none
                                       &none                 &none                  &none        &none          &none        &none
            >;
        };

        MEDNUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "MEDNUM";
            bindings = <
&none     &kp KP_MINUS      &kp KP_PLUS  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9     &kp EXCL         &kp AT     &kp POUND            &kp DOLLAR            &kp PERCENT  &none
&none  &kp KP_MULTIPLY       &kp KP_DOT  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none    &kp KP_DIVIDE  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3    &kp MINUS      &kp EQUAL     &kp COMMA               &kp DOT              &kp SLASH  &none
                                                   &none            &none       &kp RETURN        &none          &none     &kp LSHFT
            >;
        };

        GFUNCT {
            bindings = <
&none  &kp F1   &kp F2   &kp F3   &kp F4  &kp GRAVE      &kp C_VOLUME_UP  &kp K_PLAY_PAUSE       &none  &none  &none  &none
&none  &kp F5   &kp F6   &kp F7   &kp F8      &none    &kp C_VOLUME_DOWN        &kp K_PREV  &kp K_NEXT  &none  &none  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12      &none           &kp K_MUTE             &none       &none  &none  &none  &none
                          &none    &none      &none                &none             &none       &none
            >;

            label = "GFUNCT";
        };

        UTIL {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none    &bt BT_CLR    &none  &none  &none  &none  &none  &none
&none    &new_macro         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none
                                          &none         &none         &none    &none  &none  &none
            >;

            label = "UTIL";
        };
    };
};
